version: '3.8'


services:
  api-gateway:
    build:
      context: /home/ing/Bureau/TikTok_Clone/server/api-gateway
    depends_on:
      - user-service
    environment:
      # On récupère les variables depuis .env (Docker Compose va les substituer)
      API_GATEWAY_PORT: ${API_GATEWAY_PORT}
      JWT_SECRET: ${JWT_SECRET}
      MONGODB_URI: ${MONGODB_URI}
      RABBITMQ_URI: ${RABBITMQ_URI}
      USER_SERVICE_PORT: ${USER_SERVICE_PORT}
    ports:
      - published: 3000
        target: 8080

  mongo:
    container_name: docker_mongo_1
    image: mongo:latest
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - published: 27017
        target: 27017
    volumes:
      - /home/ing/Bureau/TikTok_Clone/server/docker/services/mongodb/init.js:/docker-entrypoint-initdb.d/init.js:ro
      - mongodb_data:/data/db:rw

  postgres:
    container_name: docker_postgres_1
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - published: 5432
        target: 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data:rw

  rabbitmq:
    container_name: docker_rabbitmq_1
    image: rabbitmq:management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - published: 5672
        target: 5672
      - published: 15672
        target: 15672
    volumes:
      - /home/ing/Bureau/TikTok_Clone/server/docker/services/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro

  redis:
    image: redis:latest
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - published: 6379
        target: 6379
    volumes:
      - /home/ing/Bureau/TikTok_Clone/server/docker/services/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - redis_data:/data:rw

  user-service:
    build:
      context: /home/ing/Bureau/TikTok_Clone/server/services/user-service
    depends_on:
      - mongo
      - rabbitmq
    environment:
      JWT_SECRET: ${JWT_SECRET}
      MONGODB_URI: ${MONGODB_URI}
      RABBITMQ_URI: ${RABBITMQ_URI}
      USER_SERVICE_PORT: ${USER_SERVICE_PORT}
    ports:
      - published: 3001
        target: 3001

volumes:
  mongodb_data: {}
  postgres_data: {}
  redis_data: {}
